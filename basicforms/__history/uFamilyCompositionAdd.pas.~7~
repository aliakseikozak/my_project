unit uFamilyCompositionAdd;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, ufmBaseForm, cxGraphics, cxControls,
  cxLookAndFeels, cxLookAndFeelPainters, cxContainer, cxEdit,
  dxLayoutcxEditAdapters, dxLayoutControlAdapters, Vcl.ComCtrls, dxCore,
  cxDateUtils, Vcl.StdCtrls, cxMaskEdit, cxDropDownEdit, cxCalendar,
  dxLayoutContainer, cxTextEdit, dxLayoutControl, Vcl.ExtCtrls, System.Actions,
  Vcl.ActnList, dxBar, cxClasses, Data.DB, uExchDBData, uResource, uExchDB,
  cxLookupEdit, cxDBLookupEdit, cxDBLookupComboBox;

type
  TfmFamilyCompositionAdd = class(TfmBaseForm)
    Panel1: TPanel;
    dxLayoutControl1Group_Root: TdxLayoutGroup;
    dxLayoutControl1: TdxLayoutControl;
    btnOk: TButton;
    btnCancel: TButton;
    dxLayoutItem1: TdxLayoutItem;
    edFam: TcxTextEdit;
    dxLayoutItem2: TdxLayoutItem;
    edName: TcxTextEdit;
    dxLayoutItem3: TdxLayoutItem;
    edPatronymic: TcxTextEdit;
    dxLayoutItem4: TdxLayoutItem;
    dtBirthdate: TcxDateEdit;
    dxLayoutItem5: TdxLayoutItem;
    cxTextEdit1: TcxTextEdit;
    dxLayoutItem6: TdxLayoutItem;
    cxTextEdit2: TcxTextEdit;
    dxLayoutGroup1: TdxLayoutGroup;
    CheckBox1: TCheckBox;
    dxLayoutItem7: TdxLayoutItem;
    dxLayoutItem8: TdxLayoutItem;
    CheckBox2: TCheckBox;
    cxLookupComboBox1: TcxLookupComboBox;
    dxLayoutItem9: TdxLayoutItem;
    dsFamilymember: TDataSource;
    function GenParams(): string;
    procedure btnOkClick(Sender: TObject);
    procedure FormShow(Sender: TObject);
    procedure btnCancelClick(Sender: TObject);
  private
    { Private declarations }

    dbIU: TDBData;
    FMode: integer;
    FID: Variant;
    FDB: TDBData;
    dbFamilymember: TDBData;
  //  function GetLcbValue(pLcb: TcxLookupComboBox): string; overload;
    procedure InitForm;
    function GetLcbValue(pLcb: TcxLookupComboBox): string; overload;
    function GetLcbValue(pLcb: TcxDateEdit): string; overload;
    function GetLcbValue(pLcb: TcxComboBox): string; overload;

  public
    { Public declarations }
    procedure SetData(pDb: TDBData; pMode: integer; pID: Variant);
  end;

var
  fmFamilyCompositionAdd: TfmFamilyCompositionAdd;
     //familycomposition_set
implementation
uses
  uKartUtils,uOVDAdd;

{$R *.dfm}


procedure TfmFamilyCompositionAdd.btnCancelClick(Sender: TObject);
begin
  Close;

end;

procedure TfmFamilyCompositionAdd.btnOkClick(Sender: TObject);
begin
  if FMode = 0 then
  begin
    dbIU := DataSetQuery('familycomposition_set', ['0', VarToStr(FMode), Resource.sessionInfo.token_id, GenParams()]);
  end
  else
  begin
    dbIU := DataSetQuery('familycomposition_set', [FDB.DataSet.FieldByName('id').Value, VarToStr(FMode), Resource.sessionInfo.token_id, GenParams()]);
  end;
  Close;
end;

procedure TfmFamilyCompositionAdd.FormShow(Sender: TObject);
begin
   InitForm;
   if (FMode = 1) and (not FDB.DataSet.IsEmpty) then
   begin
      with FDB.DataSet do
      begin

        edFam.Text := FieldByName('family_name').AsString;
        edName.Text := FieldByName('name').AsString;
        edPatronymic.Text := FieldByName('patronymic').AsString;
        dtBirthdate.EditValue := FieldByName('birthdate').Value;
        cxTextEdit2.Text := FieldByName('address').AsString;
        cxTextEdit1.Text := FieldByName('work_place').AsString;
        CheckBox1.Checked := FieldByName('living_with').AsBoolean;
        CheckBox2.Checked := FieldByName('state_support').AsBoolean;
        cxLookupComboBox1.EditValue := FieldByName('family_member').Value;
      end;
   end;
   EnabledEdData(Self, gNameForm, 'fmFamilyCompositionAdd',  1);
end;

function TfmFamilyCompositionAdd.GenParams(): string;
begin
  result := '';

  //result := result + cxbedtNameShort.Text + '~';

  IF edName.Text <> '' then
    result := result + edName.Text + '~'
  else
    result := result + 'NULL' + '~';

  IF edFam.Text <> '' then
    result := result + edFam.Text + '~'
  else
    result := result + 'NULL' + '~';

  IF edPatronymic.Text <> '' then
    result := result + edPatronymic.Text + '~'
  else
    result := result + 'NULL' + '~';

  result := result + GetLcbValue(dtBirthdate) + '~';
  Result := Result + BoolToStr(CheckBox2.Checked, True) + '~';

  IF cxTextEdit1.Text <> '' then
    result := result + cxTextEdit1.Text + '~'
  else
    result := result + 'NULL' + '~';

  Result := Result + BoolToStr(CheckBox1.Checked, True) + '~';

  IF cxTextEdit2.Text <> '' then
    result := result + cxTextEdit2.Text + '~'
  else
    result := result + 'NULL' + '~';

  result := result + GetLcbValue(cxLookupComboBox1) + '~';

    result := result + VarToStr(FID) + '~';

end;

procedure TfmFamilyCompositionAdd.SetData(pDb: TDBData; pMode: integer; pID: Variant);
begin
  FDB := pDb;
  FID := pID;
  FMode := pMode;
end;
  {
function TfmFamilyCompositionAdd.GetLcbValue(pLcb: TcxLookupComboBox): string;
begin
  if VarIsNull(pLcb.EditValue) then
    result := 'NULL'
  else
    result := VarToStr(pLcb.EditValue);
end;  }

function TfmFamilyCompositionAdd.GetLcbValue(pLcb: TcxLookupComboBox): string;
begin
  if VarIsNull(pLcb.EditValue) then
    result := 'NULL'
  else
    result := VarToStr(pLcb.EditValue);
end;

function TfmFamilyCompositionAdd.GetLcbValue(pLcb: TcxDateEdit): string;
begin
  if VarIsNull(pLcb.EditValue) then
    result := 'NULL'
  else
    result := FormatDateTime('mm-dd-yyyy',pLcb.EditValue{, Resource.JsonFormatSettings});
end;

function TfmFamilyCompositionAdd.GetLcbValue(pLcb: TcxComboBox): string;
begin
  case (pLcb.ItemIndex) of
    0:
      result := 'true';
    1:
      result := 'false';
  end;
end;

procedure TfmFamilyCompositionAdd.InitForm;
begin
  dbFamilymember := TDBData.Create(Resource.sessionInfo, TDBHTTP.TypeRequest, TDBHTTP.TypeQuerySQL,
   ' SELECT s.id, s.name  '+
   '   FROM directory_familymember AS s  ', []);
  dsFamilymember.DataSet := dbFamilymember.DataSet;
end;



end.
