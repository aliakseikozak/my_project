unit uOffensesAdd;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, ufmBaseForm, System.Actions,
  Vcl.ActnList, dxBar, cxClasses, Data.DB, cxGraphics, cxControls,
  cxLookAndFeels, cxLookAndFeelPainters, cxContainer, cxEdit, Vcl.ComCtrls,
  dxCore, cxDateUtils, dxLayoutcxEditAdapters, cxTextEdit, Vcl.StdCtrls,
  Vcl.ExtCtrls, dxLayoutContainer, cxDropDownEdit, cxLookupEdit, cxDBLookupEdit,
  cxDBLookupComboBox, cxMaskEdit, cxCalendar, dxLayoutControl, uExchDBData, uResource, uExchDB;

type
  TfmOffensesAdd = class(TfmBaseForm)
    dxLayoutControl1: TdxLayoutControl;
    cxDateEdit2: TcxDateEdit;
    cxDateEdit1: TcxDateEdit;
    cxLookupComboBox2: TcxLookupComboBox;
    cxLookupComboBox3: TcxLookupComboBox;
    dxLayoutControl1Group_Root: TdxLayoutGroup;
    dxLayoutItem4: TdxLayoutItem;
    dxLayoutItem2: TdxLayoutItem;
    dxLayoutItem5: TdxLayoutItem;
    dxLayoutItem6: TdxLayoutItem;
    Panel1: TPanel;
    btnOk: TButton;
    btnCancel: TButton;
    dxLayoutItem1: TdxLayoutItem;
    cxLookupComboBox4: TcxLookupComboBox;
    cxTextEdit1: TcxTextEdit;
    dxLayoutItem7: TdxLayoutItem;
    dsOrganization: TDataSource;
    dsDirectory_article: TDataSource;
    dsOffenses_type: TDataSource;
    procedure FormShow(Sender: TObject);
  private
    { Private declarations }
    dbOrganization: TDBData;
    dbOffenses_type: TDBData;
    dbDirectory_article: TDBData;
    procedure InitForm;
  public
    { Public declarations }
  end;

var
  fmOffensesAdd: TfmOffensesAdd;

implementation
               ////offenses_set
{$R *.dfm}

procedure TfmOffensesAdd.FormShow(Sender: TObject);
begin
  InitForm;
   if (FMode = 1) and (not FDB.DataSet.IsEmpty) then
   begin
      with FDB.DataSet do
      begin
        cxDateEdit2.EditValue := FieldByName('birthdate').Value;
        cxDateEdit1.EditValue := FieldByName('birthdate').Value;
        cxTextEdit1.EditValue := FieldByName('patronymic').AsString;
        cxLookupComboBox3.EditValue := FieldByName('sex').Value;
        cxLookupComboBox2.EditValue := FieldByName('sex').Value;
        cxLookupComboBox4.EditValue := FieldByName('sex').Value;
      end;
   end;
end;

procedure TfmOffensesAdd.InitForm;
begin

  dbOrganization := TDBData.Create(Resource.sessionInfo, TDBHTTP.TypeRequest, TDBHTTP.TypeQuerySQL,
   ' SELECT s.id, s.name  '+
   '   FROM company_directory_organization AS s  ', []);
  dsOrganization.DataSet := dbOrganization.DataSet;

  dbOffenses_type := TDBData.Create(Resource.sessionInfo, TDBHTTP.TypeRequest, TDBHTTP.TypeQuerySQL,
   ' SELECT s.id, s.name  '+
   '   FROM directory_article AS s  ', []);
  dsOffenses_type.DataSet := dbOffenses_type.DataSet;

  dbDirectory_article := TDBData.Create(Resource.sessionInfo, TDBHTTP.TypeRequest, TDBHTTP.TypeQuerySQL,
   ' SELECT s.id, s.name  '+
   '   FROM offenses_type AS s  ', []);
  dsDirectory_article.DataSet := dbDirectory_article.DataSet;
 {
  dbStatus := Resource.CommonDbData.dbStatus.CreateDatasetBySelf;
  dsStatus.DataSet := dbStatus;
              }
  {CreateButtonInCX(cxEmployees, [bkEllipsis, bkGlyph], [actSetEmployees, actEmployeesClear]);
  CreateButtonInCX(cxStoragesLeave, [bkEllipsis, bkGlyph], [actSetStoragesLeave, actStoragesLeaveClear]);
  CreateButtonInCX(cxStoragesPosting, [bkEllipsis, bkGlyph], [actSetStoragePosting, actStoragePostingClear]);
  CreateButtonInCX(cxdedtBegin, [bkGlyph], [actBeginClear]);
  CreateButtonInCX(cxdedtEnd, [bkGlyph], [actEndClear]);
  CreateButtonInCX(btnEdtNumberQuarter, [bkGlyph], [actNumberQuarterClear]);
  CreateButtonInCX(btnEdtNumberOutlined, [bkGlyph], [actNumberOutlinedClear]);
  CreateButtonInCX(cxLesFond, [bkEllipsis, bkGlyph], [actSetLesFond, actLesFondClear]);
  CreateButtonInCX(cxbtnDocNum, [bkGlyph], [actDocNum]);
  CreateButtonInCX(cxForestryInst, [bkGlyph], [actForestryInstClear]);
  CreateButtonInCX(cxFirstDepartments, [bkGlyph], [actFirstDepartmentsClear]);
  CreateButtonInCX(cxSecondDepartments, [bkGlyph], [actSecondDepartmentsClear]);
  CreateButtonInCX(cxStatus, [bkGlyph], [actStatusClear]); }
end;

end.
